"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/audio/AudioEngine.ts":
/*!**********************************!*\
  !*** ./lib/audio/AudioEngine.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* __next_internal_client_entry_do_not_use__ default auto */ class AudioEngine {\n    static getInstance() {\n        if (!AudioEngine.instance) {\n            AudioEngine.instance = new AudioEngine();\n        }\n        return AudioEngine.instance;\n    }\n    async initialize() {\n        if (this.initialized) return;\n        try {\n            console.log(\"Simplified audio engine initialized\");\n            this.initialized = true;\n        } catch (error) {\n            console.error(\"Failed to initialize audio:\", error);\n        }\n    }\n    // Transport Controls\n    async play() {\n        await this.initialize();\n        this.isCurrentlyPlaying = true;\n        console.log(\"Audio engine: play started\");\n        return true;\n    }\n    pause() {\n        this.isCurrentlyPlaying = false;\n        console.log(\"Audio engine: paused\");\n    }\n    stop() {\n        this.isCurrentlyPlaying = false;\n        this.currentPosition = \"0:0:0\";\n        console.log(\"Audio engine: stopped\");\n    }\n    async startRecording() {\n        await this.initialize();\n        this.isCurrentlyRecording = true;\n        console.log(\"Audio engine: recording started\");\n        this.play();\n    }\n    async stopRecording() {\n        this.isCurrentlyRecording = false;\n        console.log(\"Audio engine: recording stopped\");\n        this.stop();\n        return null;\n    }\n    // Track Management\n    createTrack(name) {\n        let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"audio\";\n        const id = \"track_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9));\n        const track = {\n            id,\n            name,\n            volume: 0,\n            muted: false,\n            solo: false,\n            instrument: null,\n            effects: [],\n            channel: null\n        };\n        this.tracks.set(id, track);\n        console.log(\"Audio engine: created \".concat(type, ' track \"').concat(name, '\" with id ').concat(id));\n        return id;\n    }\n    getTrack(id) {\n        return this.tracks.get(id);\n    }\n    getAllTracks() {\n        return Array.from(this.tracks.values());\n    }\n    deleteTrack(id) {\n        const track = this.tracks.get(id);\n        if (track) {\n            this.tracks.delete(id);\n            console.log(\"Audio engine: deleted track \".concat(id));\n        }\n    }\n    // Track Controls\n    setTrackVolume(trackId, volume) {\n        const track = this.tracks.get(trackId);\n        if (track) {\n            track.volume = volume;\n            console.log(\"Audio engine: set track \".concat(trackId, \" volume to \").concat(volume, \"dB\"));\n        }\n    }\n    setTrackMute(trackId, muted) {\n        const track = this.tracks.get(trackId);\n        if (track) {\n            track.muted = muted;\n            console.log(\"Audio engine: \".concat(muted ? \"muted\" : \"unmuted\", \" track \").concat(trackId));\n        }\n    }\n    setTrackSolo(trackId, solo) {\n        const track = this.tracks.get(trackId);\n        if (track) {\n            track.solo = solo;\n            console.log(\"Audio engine: \".concat(solo ? \"soloed\" : \"unsoloed\", \" track \").concat(trackId));\n        }\n    }\n    // Audio Loading\n    async loadAudioToTrack(trackId, audioUrl) {\n        const track = this.tracks.get(trackId);\n        if (track) {\n            console.log(\"Audio engine: loaded audio to track \".concat(trackId));\n        }\n    }\n    // MIDI Playback\n    playNote(trackId, note) {\n        let duration = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"8n\", time = arguments.length > 3 ? arguments[3] : void 0;\n        const track = this.tracks.get(trackId);\n        if (track) {\n            console.log(\"Audio engine: playing note \".concat(note, \" on track \").concat(trackId));\n        }\n    }\n    // Effects\n    addEffect(trackId, effectType) {\n        const track = this.tracks.get(trackId);\n        if (!track) return;\n        track.effects.push({\n            name: effectType,\n            type: effectType\n        });\n        console.log(\"Audio engine: added \".concat(effectType, \" effect to track \").concat(trackId));\n    }\n    // Transport Control\n    setBPM(bpm) {\n        this.currentBPM = bpm;\n        console.log(\"Audio engine: set BPM to \".concat(bpm));\n    }\n    getBPM() {\n        return this.currentBPM;\n    }\n    getPosition() {\n        return this.currentPosition;\n    }\n    setPosition(position) {\n        this.currentPosition = position;\n        console.log(\"Audio engine: set position to \".concat(position));\n    }\n    // Loop Control\n    setLoop(start, end) {\n        console.log(\"Audio engine: set loop from \".concat(start, \" to \").concat(end));\n    }\n    disableLoop() {\n        console.log(\"Audio engine: disabled loop\");\n    }\n    // Metronome\n    toggleMetronome(enabled) {\n        console.log(\"Audio engine: metronome \".concat(enabled ? \"enabled\" : \"disabled\"));\n    }\n    // State\n    getState() {\n        return {\n            isPlaying: this.isCurrentlyPlaying,\n            isRecording: this.isCurrentlyRecording,\n            bpm: this.currentBPM,\n            position: this.currentPosition,\n            tracks: this.getAllTracks()\n        };\n    }\n    // Cleanup\n    dispose() {\n        this.tracks.clear();\n        console.log(\"Audio engine: disposed\");\n    }\n    constructor(){\n        this.initialized = false;\n        this.tracks = new Map();\n        this.mainOut = null;\n        this.recorder = null;\n        this.metronome = null;\n        this.isCurrentlyPlaying = false;\n        this.isCurrentlyRecording = false;\n        this.currentBPM = 120;\n        this.currentPosition = \"0:0:0\";\n    // Simplified constructor without Tone.js\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (AudioEngine);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/audio/AudioEngine.ts\n"));

/***/ })

});